{"wrkspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"broadcast_msg\" id=\"w/Vd1eJ`!)$qBDfB.@nw\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">message1</variable><variable type=\"broadcast_msg\" id=\"SDcmX*{o-=aUUw*5(j*M\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">test</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"230\" y=\"50\"><next><block type=\"iq_looks_print\" id=\"Fpvwx|X%;foya7Z$xqB)\"><value name=\"DATA\"><shadow type=\"text\" id=\"DUjMue_)^$L[f9IP@/T/\"><field name=\"TEXT\">Hello</field></shadow></value><next><block type=\"iq_looks_set_cursor\" id=\"vA}`/`gRE;b`q*bJvPIM\"><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"K:f%))X.jbL%H*jcCJjJ\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"j@{ql$nJhN;.wUhb,y75\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_looks_next_row\" id=\"Ba-mr0lP7?8h_~J/2#v{\"><next><block type=\"iq_looks_set_print_precision\" id=\"i]fib`O;mq6~:wZnx!|X\"><field name=\"PRECISION\">1</field><next><block type=\"iq_looks_clear_all_rows\" id=\"9W7dda{,D50dYX!;8_b`\"><next><block type=\"iq_looks_clear_row\" id=\"o-n[Qeuz;+@^xQ^LTv[J\"><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\".t*4zH{I/fg,g;OPPBUs\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_sounds_play_sound\" id=\"nxW|PF-qc*;e10@2SYIE\"><field name=\"SOUND\">siren2</field><next><block type=\"iq_sounds_play_note\" id=\"@]-=Nny(F`5qKCC!SJv{\"><field name=\"NOTE\">0</field><field name=\"DURATION\">4</field><next><block type=\"iq_drivetrain_drive\" id=\"+8y]w6yF}MBkiELVdiq0\"><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_drivetrain_drive_for\" id=\"Jv5y5!sN(5N3Mfg^l~-?\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">in</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"!K3G=Je4L}HH7/+gZ[+)\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_drivetrain_turn\" id=\"DuZ~~ZBfeofg@b@MtMV%\"><field name=\"TURNDIRECTION\">right</field><next><block type=\"iq_motion_stop_driving\" id=\"3v%*Z8USIjbOPp;w`vxN\"><next><block type=\"iq_drivetrain_set_drive_velocity\" id=\"+j|BHs*EIO.naP.,LNO1\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"C5T4R4hQ`gD#wiP(2pY@\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"iq_drivetrain_set_turn_velocity\" id=\"`D6k-Gh9wW[f^;f70`9]\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"Q;*RYPi)9CV0jB!Or/EV\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"iq_drivetrain_set_drive_stopping\" id=\"QmxbGwfd.Ax8!Krx.%Ei\"><field name=\"MODE\">brake</field><next><block type=\"iq_drivetrain_set_drive_timeout\" id=\"9AxRwF0=?@Zz0YzzA=Au\"><value name=\"TIMEOUT\"><shadow type=\"math_number\" id=\"su|__yV![!B*tNWcO2oT\"><field name=\"NUM\">1</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1,6,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm"}}],"slot":0,"cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"iq_cpp.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT6, 1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart,200, 173, 76, mm, 1);\n\n//Vision sensor index vars.\nint Vision1_objectIndex = 0;\n\nint Brain_precision;\n\n\n// Generated code.\n\nfloat myVariable;\n\nvex::event message1 = vex::event();\nvex::event test = vex::event();\n\nint whenStarted1() {\n  Brain.Screen.print(\"Hello\");\n  Brain.Screen.setCursor(1, 1);\n  Brain.Screen.newLine();\n  Brain_precision = 1;\n  Brain.Screen.clearScreen();\n  Brain.Screen.clearLine(1);\n  Brain.playSound(siren);\n  Brain.playNote(3, 0, 1000);\n  Drivetrain.drive(forward);\n  Drivetrain.driveFor(1.0, inches, true);\n  Drivetrain.turn(right);\n  Drivetrain.stop();\n  Drivetrain.setDriveVelocity(50.0, percent);\n  Drivetrain.setTurnVelocity(50.0, percent);\n  Drivetrain.setStopping(brake);\n  Drivetrain.setTimeout(1.0, seconds);\nreturn 0;\n}\n\n\nint main() {\n\n\n  srand(vex::timer::system());\n\n\n\n  // pre event registration\n  // register event handlers\n\n  task::sleep(15);\n  // post event registration\n\n  // when started blocks...\n\n  whenStarted1();\n  return 0;\n}","cppStatus":"true","platform":"IQ","sdkVersion":"20200120.14.00.00","appVersion":"1.0.9-45","fileFormat":"0.1.0","icon":""}