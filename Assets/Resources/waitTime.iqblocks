{"wrkspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable><variable type=\"boolean\" id=\"B_D~B8ZSF48}?H^]ByHp\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">test</variable></variables><block type=\"iq_events_when_started\" id=\"|j_Xskn+N(+2Da-v^j*/\" x=\"370\" y=\"-250\"><next><block type=\"iq_control_repeat\" id=\"lFfvPx*-nq8scbR`L;VT\"><value name=\"TIMES\"><shadow type=\"math_whole_number\" id=\"$/Va@n|Qgp~ng|}Ls0m8\"><field name=\"NUM\">4</field></shadow></value><statement name=\"SUBSTACK\"><block type=\"iq_drivetrain_turn_for\" id=\"!Ht3o64NKkT:f!14{Is~\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"#DGJ@sZ{d[(}t4xqmUp7\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"iq_control_wait\" id=\"bd6Fi.C6rjgyEwxe-]mJ\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"=3U)s!+OgB$O%,4|qN-@\"><field name=\"NUM\">1</field></shadow></value></block></next></block></statement></block></next></block></xml>","rconfig":[{"port":[1,6,2],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:1","direction":"fwd","gyroType":"smart","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm"}},{"port":[3],"name":"Distance3","customName":false,"deviceType":"Distance","setting":{}},{"port":[4],"name":"Color4","customName":false,"deviceType":"Color","setting":{}}],"slot":0,"cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"iq_cpp.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, 1, false);\nmotor RightDriveSmart = motor(PORT6, 1, true);\ngyro TurnGyroSmart = gyro(PORT2, true);\nsmartdrive Drivetrain= smartdrive(LeftDriveSmart, RightDriveSmart, TurnGyroSmart,200);\n;\nsonar Distance3 = sonar(PORT3);\ncolorsensor Color4 = colorsensor(PORT4);\n\n//Vision sensor index vars.\nint Vision1_objectIndex = 0;\n\nint Brain_precision;\n\n\n// Generated code.\n\nfloat myVariable;\n\nbool test;\n\nint whenStarted1() {\n  repeat(4) {\n    Drivetrain.turnFor(90.0, degrees, true);\n    wait(1.0, seconds);\n    wait(20, msec);\n  }\nreturn 0;\n}\n\n\nint main() {\n\n\n  srand(vex::timer::system());\n\n  // calibrate the drivetrain gyro\n  task::sleep(200);\n  Brain.Screen.print(\"Calibrating Gyro\");\n  while (TurnGyroSmart.isCalibrating()) {\n    task::sleep(25);\n  }\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1,1);\n\n  // pre event registration\n  // register event handlers\n\n  task::sleep(15);\n  // post event registration\n\n  // when started blocks...\n\n  whenStarted1();\n  return 0;\n}","cppStatus":"true","platform":"IQ","sdkVersion":"20200120.14.00.00","appVersion":"1.0.9-45","fileFormat":"0.1.0","icon":""}